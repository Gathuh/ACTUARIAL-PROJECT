events <- numeric(length(time_intervals))
censored <- numeric(length(time_intervals))
adjusted_at_risk <- numeric(length(time_intervals))
survival_prob <- numeric(length(time_intervals))
cumulative_survival <- 1
# Calculate actuarial estimates
for (i in seq_along(time_intervals)) {
start_time <- time_intervals[i]
end_time <- start_time + diff
# Number of individuals at risk at the start of the interval
at_risk[i] <- sum(data$Duration >= start_time)
# Number of events (deaths) in this interval
events[i] <- sum(data$Duration >= start_time & data$Duration < end_time & data$event == 1)
# Number of censored observations in this interval
censored[i] <- sum(data$Duration >= start_time & data$Duration < end_time & data$event == 0)
# Adjusted number at risk
adjusted_at_risk[i] <- at_risk[i] - censored[i] / 2
h_t[i]= events[i] / adjusted_at_risk[i]
# Survival probability for this interval
if (adjusted_at_risk[i] > 0) {
interval_survival[i] <- 1 - events[i] / adjusted_at_risk[i]
} else {
interval_survival[i] <- 1
}
# Cumulative survival probability
cumulative_survival[i] <- cumulative_survival * interval_survival[i]
survival_prob[i] <- cumulative_survival
}
# Combine results into a data frame
actuarial_results <- data.frame(
Time_Interval = paste(time_intervals, time_intervals + diff, sep = "-"),
At_Risk = at_risk,
Events = events,
Censored = censored,
Adjusted_At_Risk = adjusted_at_risk,
Survival_Probability = survival_prob
)
a=actuarial_results$Events/(actuarial_results$Adjusted_At_Risk*(actuarial_results$Adjusted_At_Risk - actuarial_results$Events))
for(i in seq_along(time_intervals)){
actuarial_results$se=sqrt((actuarial_results$Survival_Probability**2)*sum(a))
}
# Print the results
actuarial_results$low_95=actuarial_results$Survival_Probability-qnorm(0.95,lower.tail = T)*actuarial_results$se
actuarial_results$up_95=actuarial_results$Survival_Probability+qnorm(0.95,lower.tail = T)*actuarial_results$se
actuarial_results %>% filter(Events!=0)
# Plot the Actuarial survival curve
plot(time_intervals, survival_prob, type = "s", xlab = "Time", ylab = "Survival Probability", main = "Actuarial Survival Curve",ylim = c(0,1))
cumulative_survival
survival_prob
int=100
time_intervals=seq(0,max(data$Duration+int),by=int)
diff=diff(time_intervals)[1]
at_risk <- numeric(length(time_intervals))
events <- numeric(length(time_intervals))
censored <- numeric(length(time_intervals))
adjusted_at_risk <- numeric(length(time_intervals))
survival_prob <- numeric(length(time_intervals))
cumulative_survival <- 1
# Calculate actuarial estimates
for (i in seq_along(time_intervals)) {
start_time <- time_intervals[i]
end_time <- start_time + diff
# Number of individuals at risk at the start of the interval
at_risk[i] <- sum(data$Duration >= start_time)
# Number of events (deaths) in this interval
events[i] <- sum(data$Duration >= start_time & data$Duration < end_time & data$event == 1)
# Number of censored observations in this interval
censored[i] <- sum(data$Duration >= start_time & data$Duration < end_time & data$event == 0)
# Adjusted number at risk
adjusted_at_risk[i] <- at_risk[i] - censored[i] / 2
h_t[i]= events[i] / adjusted_at_risk[i]
# Survival probability for this interval
if (adjusted_at_risk[i] > 0) {
interval_survival <- 1 - events[i] / adjusted_at_risk[i]
} else {
interval_survival <- 1
}
# Cumulative survival probability
cumulative_survival <- cumulative_survival * interval_survival
survival_prob[i] <- cumulative_survival
}
# Combine results into a data frame
actuarial_results <- data.frame(
Time_Interval = paste(time_intervals, time_intervals + diff, sep = "-"),
At_Risk = at_risk,
Events = events,
Censored = censored,
Adjusted_At_Risk = adjusted_at_risk,
Survival_Probability = survival_prob
)
a=actuarial_results$Events/(actuarial_results$Adjusted_At_Risk*(actuarial_results$Adjusted_At_Risk - actuarial_results$Events))
for(i in seq_along(time_intervals)){
actuarial_results$se=sqrt((actuarial_results$Survival_Probability**2)*sum(a))
}
# Print the results
actuarial_results$low_95=actuarial_results$Survival_Probability-qnorm(0.95,lower.tail = T)*actuarial_results$se
actuarial_results$up_95=actuarial_results$Survival_Probability+qnorm(0.95,lower.tail = T)*actuarial_results$se
actuarial_results %>% filter(Events!=0)
# Plot the Actuarial survival curve
plot(time_intervals, survival_prob, type = "s", xlab = "Time", ylab = "Survival Probability", main = "Actuarial Survival Curve",ylim = c(0,1))
survival_prob
int=100
time_intervals=seq(0,max(data$Duration+int),by=int)
diff=diff(time_intervals)[1]
at_risk <- numeric(length(time_intervals))
events <- numeric(length(time_intervals))
censored <- numeric(length(time_intervals))
adjusted_at_risk <- numeric(length(time_intervals))
survival_prob <- numeric(length(time_intervals))
cumulative_survival <- 1
# Calculate actuarial estimates
for (i in seq_along(time_intervals)) {
start_time <- time_intervals[i]
end_time <- start_time + diff
# Number of individuals at risk at the start of the interval
at_risk[i] <- sum(data$Duration >= start_time)
# Number of events (deaths) in this interval
events[i] <- sum(data$Duration >= start_time & data$Duration < end_time & data$event == 1)
# Number of censored observations in this interval
censored[i] <- sum(data$Duration >= start_time & data$Duration < end_time & data$event == 0)
# Adjusted number at risk
adjusted_at_risk[i] <- at_risk[i] - censored[i] / 2
h_t= events[i] / adjusted_at_risk[i]
# Survival probability for this interval
if (adjusted_at_risk[i] > 0) {
interval_survival <- 1 - events[i] / adjusted_at_risk[i]
} else {
interval_survival <- 1
}
# Cumulative survival probability
cumulative_survival <- cumulative_survival * interval_survival
survival_prob[i] <- cumulative_survival
}
# Combine results into a data frame
actuarial_results <- data.frame(
Time_Interval = paste(time_intervals, time_intervals + diff, sep = "-"),
At_Risk = at_risk,
Events = events,
Censored = censored,
Adjusted_At_Risk = adjusted_at_risk,
Survival_Probability = survival_prob
)
a=actuarial_results$Events/(actuarial_results$Adjusted_At_Risk*(actuarial_results$Adjusted_At_Risk - actuarial_results$Events))
for(i in seq_along(time_intervals)){
actuarial_results$se=sqrt((actuarial_results$Survival_Probability**2)*sum(a))
}
# Print the results
actuarial_results$low_95=actuarial_results$Survival_Probability-qnorm(0.95,lower.tail = T)*actuarial_results$se
actuarial_results$up_95=actuarial_results$Survival_Probability+qnorm(0.95,lower.tail = T)*actuarial_results$se
actuarial_results %>% filter(Events!=0)
# Plot the Actuarial survival curve
plot(time_intervals, survival_prob, type = "s", xlab = "Time", ylab = "Survival Probability", main = "Actuarial Survival Curve",ylim = c(0,1))
int=100
time_intervals=seq(0,max(data$Duration),by=int)
diff=diff(time_intervals)[1]
at_risk <- numeric(length(time_intervals))
events <- numeric(length(time_intervals))
censored <- numeric(length(time_intervals))
adjusted_at_risk <- numeric(length(time_intervals))
survival_prob <- numeric(length(time_intervals))
cumulative_survival <- 1
# Calculate actuarial estimates
for (i in seq_along(time_intervals)) {
start_time <- time_intervals[i]
end_time <- start_time + diff
# Number of individuals at risk at the start of the interval
at_risk[i] <- sum(data$Duration >= start_time)
# Number of events (deaths) in this interval
events[i] <- sum(data$Duration >= start_time & data$Duration < end_time & data$event == 1)
# Number of censored observations in this interval
censored[i] <- sum(data$Duration >= start_time & data$Duration < end_time & data$event == 0)
# Adjusted number at risk
adjusted_at_risk[i] <- at_risk[i] - censored[i] / 2
h_t= events[i] / adjusted_at_risk[i]
# Survival probability for this interval
if (adjusted_at_risk[i] > 0) {
interval_survival <- 1 - events[i] / adjusted_at_risk[i]
} else {
interval_survival <- 1
}
# Cumulative survival probability
cumulative_survival <- cumulative_survival * interval_survival
survival_prob[i] <- cumulative_survival
}
# Combine results into a data frame
actuarial_results <- data.frame(
Time_Interval = paste(time_intervals, time_intervals + diff, sep = "-"),
At_Risk = at_risk,
Events = events,
Censored = censored,
Adjusted_At_Risk = adjusted_at_risk,
Survival_Probability = survival_prob
)
a=actuarial_results$Events/(actuarial_results$Adjusted_At_Risk*(actuarial_results$Adjusted_At_Risk - actuarial_results$Events))
for(i in seq_along(time_intervals)){
actuarial_results$se=sqrt((actuarial_results$Survival_Probability**2)*sum(a))
}
# Print the results
actuarial_results$low_95=actuarial_results$Survival_Probability-qnorm(0.95,lower.tail = T)*actuarial_results$se
actuarial_results$up_95=actuarial_results$Survival_Probability+qnorm(0.95,lower.tail = T)*actuarial_results$se
actuarial_results %>% filter(Events!=0)
# Plot the Actuarial survival curve
plot(time_intervals, survival_prob, type = "s", xlab = "Time", ylab = "Survival Probability", main = "Actuarial Survival Curve",ylim = c(0,1))
int=2
time_intervals=seq(0,max(data$Duration),by=int)
diff=diff(time_intervals)[1]
at_risk <- numeric(length(time_intervals))
events <- numeric(length(time_intervals))
censored <- numeric(length(time_intervals))
adjusted_at_risk <- numeric(length(time_intervals))
survival_prob <- numeric(length(time_intervals))
cumulative_survival <- 1
# Calculate actuarial estimates
for (i in seq_along(time_intervals)) {
start_time <- time_intervals[i]
end_time <- start_time + diff
# Number of individuals at risk at the start of the interval
at_risk[i] <- sum(data$Duration >= start_time)
# Number of events (deaths) in this interval
events[i] <- sum(data$Duration >= start_time & data$Duration < end_time & data$event == 1)
# Number of censored observations in this interval
censored[i] <- sum(data$Duration >= start_time & data$Duration < end_time & data$event == 0)
# Adjusted number at risk
adjusted_at_risk[i] <- at_risk[i] - censored[i] / 2
h_t= events[i] / adjusted_at_risk[i]
# Survival probability for this interval
if (adjusted_at_risk[i] > 0) {
interval_survival <- 1 - events[i] / adjusted_at_risk[i]
} else {
interval_survival <- 1
}
# Cumulative survival probability
cumulative_survival <- cumulative_survival * interval_survival
survival_prob[i] <- cumulative_survival
}
# Combine results into a data frame
actuarial_results <- data.frame(
Time_Interval = paste(time_intervals, time_intervals + diff, sep = "-"),
At_Risk = at_risk,
Events = events,
Censored = censored,
Adjusted_At_Risk = adjusted_at_risk,
Survival_Probability = survival_prob
)
a=actuarial_results$Events/(actuarial_results$Adjusted_At_Risk*(actuarial_results$Adjusted_At_Risk - actuarial_results$Events))
for(i in seq_along(time_intervals)){
actuarial_results$se=sqrt((actuarial_results$Survival_Probability**2)*sum(a))
}
# Print the results
actuarial_results$low_95=actuarial_results$Survival_Probability-qnorm(0.95,lower.tail = T)*actuarial_results$se
actuarial_results$up_95=actuarial_results$Survival_Probability+qnorm(0.95,lower.tail = T)*actuarial_results$se
actuarial_results %>% filter(Events!=0)
# Plot the Actuarial survival curve
plot(time_intervals, survival_prob, type = "s", xlab = "Time", ylab = "Survival Probability", main = "Actuarial Survival Curve",ylim = c(0,1))
View(actuarial_results)
int=10
time_intervals=seq(0,max(data$Duration),by=int)
diff=diff(time_intervals)[1]
at_risk <- numeric(length(time_intervals))
events <- numeric(length(time_intervals))
censored <- numeric(length(time_intervals))
adjusted_at_risk <- numeric(length(time_intervals))
survival_prob <- numeric(length(time_intervals))
cumulative_survival <- 1
# Calculate actuarial estimates
for (i in seq_along(time_intervals)) {
start_time <- time_intervals[i]
end_time <- start_time + diff
# Number of individuals at risk at the start of the interval
at_risk[i] <- sum(data$Duration >= start_time)
# Number of events (deaths) in this interval
events[i] <- sum(data$Duration >= start_time & data$Duration < end_time & data$event == 1)
# Number of censored observations in this interval
censored[i] <- sum(data$Duration >= start_time & data$Duration < end_time & data$event == 0)
# Adjusted number at risk
adjusted_at_risk[i] <- at_risk[i] - censored[i] / 2
h_t= events[i] / adjusted_at_risk[i]
# Survival probability for this interval
if (adjusted_at_risk[i] > 0) {
interval_survival <- 1 - events[i] / adjusted_at_risk[i]
} else {
interval_survival <- 1
}
# Cumulative survival probability
cumulative_survival <- cumulative_survival * interval_survival
survival_prob[i] <- cumulative_survival
}
# Combine results into a data frame
actuarial_results <- data.frame(
Time_Interval = paste(time_intervals, time_intervals + diff, sep = "-"),
At_Risk = at_risk,
Events = events,
Censored = censored,
Adjusted_At_Risk = adjusted_at_risk,
Survival_Probability = survival_prob
)
a=actuarial_results$Events/(actuarial_results$Adjusted_At_Risk*(actuarial_results$Adjusted_At_Risk - actuarial_results$Events))
for(i in seq_along(time_intervals)){
actuarial_results$se=sqrt((actuarial_results$Survival_Probability**2)*sum(a))
}
# Print the results
actuarial_results$low_95=actuarial_results$Survival_Probability-qnorm(0.95,lower.tail = T)*actuarial_results$se
actuarial_results$up_95=actuarial_results$Survival_Probability+qnorm(0.95,lower.tail = T)*actuarial_results$se
actuarial_results %>% filter(Events!=0)
# Plot the Actuarial survival curve
plot(time_intervals, survival_prob, type = "s", xlab = "Time", ylab = "Survival Probability", main = "Actuarial Survival Curve",ylim = c(0,1))
knitr::opts_chunk$set(echo=F,warnings=F,message=F,include = F,cache = T)
library(dplyr)
library(ggplot2)
library(knitr)
library(survival)
library(actuar)
##############
library(dplyr)
###############
setwd("Data")
csv_files <- list.files(pattern = "*csv")
data_list <- lapply(csv_files, readr::read_csv)
# Extract company name from file names
company_names <- gsub("^HistoricalPrices \\(5\\)", "", gsub(".csv", "", csv_files))
# Add company column to each dataframe in the list
for (i in seq_along(data_list)) {
data_list[[i]]$company <- company_names[i]
}
data_list <- lapply(data_list, function(df) {
df$Date <- as.Date(df$Date,format="%m/%d/%y")
return(df)
})
data_list_logreturn <- lapply(data_list, function(df) {
df %>%
arrange(Date) %>%
mutate(Log_Return = c( diff(log(Close)),NA))%>%.[-nrow(.),]%>%.[, c(1,5,7,8)]%>%
filter(Date<"2010-12-31" & Date>"2008-01-01")
})
new_data <- lapply(data_list_logreturn, function(df) {
index1 <- which(df$Log_Return <= -0.05)[1]
index2 <- which(df$Log_Return >= 0.05)[1]
company=df$company[1]
Logreturn=df$Log_Return[1]
if (is.na(index1)) {
Datedown <- NA
event <- NA
Dateup <- NA
Duration <- NA
} else {
Datedown <- df$Date[index1]
if (is.na(index2) || index2 < index1) {
Dateup <- tail(df$Date, 1)
event <- 0
Duration <- as.numeric(Dateup) - as.numeric(Datedown)
} else {
Dateup <- df$Date[index2]
event <- 1
Duration <- as.numeric(Dateup) - as.numeric(Datedown)
}
}
return(list(company=company,Datedown = Datedown, Duration = Duration, event = event, Dateup = Dateup,Logreturn=Logreturn))
})
new_data_df <- na.exclude(do.call(rbind, lapply(new_data, function(x) {
data.frame(
Datedown = x$Datedown,
Duration = x$Duration,
event = x$event,
Dateup = x$Dateup,
company = x$company,
Logreturn=x$Logreturn,
stringsAsFactors = T
)
})))
inflation=readr::read_csv("Data/Inflation rates/Inflation Rates.csv")
exchange_rate=readr::read_csv("Data/exchange rates/Key CBK Indicative Exchange Rates (1).csv")
inflation=inflation %>% mutate(Date=as.Date(paste0(Year,"-",Month,"-01"),format="%Y-%b-%d")) %>% mutate(year_month=paste0(lubridate::year(Date),"-",months(Date)) )
exchange_rate=exchange_rate %>% mutate(Date=as.Date(Date,format = "%d/%m/%Y") )%>% mutate(year_month=paste0(lubridate::year(Date),"-",months(Date)) )
exchange_rate_rb <- exchange_rate %>% group_by(year_month) %>% summarise(exchange_rate=mean(Mean))
interest_rates=readr::read_csv("Data/intrest rates/1852585567_Central Bank Rates.csv",skip = 1)
for (i in 1:nrow(interest_rates)) {
# If YEAR is not NA, update the last seen year
if (!is.na(interest_rates$YEAR[i])) {
last_year <- interest_rates$YEAR[i]
} else {
# If YEAR is NA, replace it with the last seen year
interest_rates$YEAR[i] <- last_year
}
}
interest_rates=interest_rates %>% mutate(Date=as.Date(paste0(YEAR,"-", MONTH ,"-01"),format="%Y-%b-%d"),year_month=paste0(lubridate::year(Date),"-",month.name[lubridate::month(Date)]))
data=new_data_df %>% mutate(year_month=paste0(lubridate::year(Dateup),"-",months(Dateup)) ) %>%
left_join(inflation %>% select(year_month, `Annual Average Inflation`, `12-Month Inflation`), by = "year_month") %>% left_join(exchange_rate_rb,by="year_month") %>% left_join(interest_rates,by="year_month")
# Filter and mutate the company names correctly
data <- data %>%
mutate(company = case_when(
company == ".EAcables " ~ "EACables",
company == " centu" ~ "Centum",
company==" jubilee ins"~"Jubilee Insurance",
company=="absa (1)"~"Absa",
TRUE ~ company  # This keeps all other values the same
))
# Function to categorize the company
categorize_sector <- function(company) {
financial <- c("Absa", "Cooperative bank ", "DTB", "Equity ", "HF group ",
"Jubilee Insurance", "KCB", "NCBA", "Stanbic holdings",
"Standard Chartered", " sanlam","I and M","Standard Chartered "," olympia", "Centum")
industrial <- c("car and general ", "Eaagads", "eabl",
"ARM", "bamburi", "boc", "carbacid", "crownpaints",
"mumias", "ungagroup", "Kakuzi", "Kapchorua",
"Limuru tea", "Sasini", " kengen", " kplc",
"EACables", " total kenya", "britishamerican", "WTK")
service <- c("Kenya airways ", "NMG", "TPS", "Sameer Africa ", "Express Kenya plc",
"Safaricom ", "Scan group ", "Eveready ", "Standard group ","Standard group
")
if (company %in% financial) {
return("Financial")
} else if (company %in% industrial) {
return("Industrial")
} else if (company %in% service) {
return("Service")
} else {
return(NA)
}
}
# Apply the function to add the 'Sector' column
data$Sector <- sapply(data$company, categorize_sector)
tr=data %>% arrange(Sector) %>% select(company,Sector)
# Convert Duration to numeric
data$Duration <- as.numeric(data$Duration)
surv_obj <- Surv(time = data$Duration, event = data$event)
survdiff(Surv(data$Duration,data$event)~data$Sector)
int=10
time_intervals=seq(0,max(data$Duration),by=int)
diff=diff(time_intervals)[1]
at_risk <- numeric(length(time_intervals))
events <- numeric(length(time_intervals))
censored <- numeric(length(time_intervals))
adjusted_at_risk <- numeric(length(time_intervals))
survival_prob <- numeric(length(time_intervals))
cumulative_survival <- 1
# Calculate actuarial estimates
for (i in seq_along(time_intervals)) {
start_time <- time_intervals[i]
end_time <- start_time + diff
# Number of individuals at risk at the start of the interval
at_risk[i] <- sum(data$Duration >= start_time)
# Number of events (deaths) in this interval
events[i] <- sum(data$Duration >= start_time & data$Duration < end_time & data$event == 1)
# Number of censored observations in this interval
censored[i] <- sum(data$Duration >= start_time & data$Duration < end_time & data$event == 0)
# Adjusted number at risk
adjusted_at_risk[i] <- at_risk[i] - censored[i] / 2
h_t= events[i] / adjusted_at_risk[i]
# Survival probability for this interval
if (adjusted_at_risk[i] > 0) {
interval_survival <- 1 - events[i] / adjusted_at_risk[i]
} else {
interval_survival <- 1
}
# Cumulative survival probability
cumulative_survival <- cumulative_survival * interval_survival
survival_prob[i] <- cumulative_survival
}
# Combine results into a data frame
actuarial_results <- data.frame(
Time_Interval = paste(time_intervals, time_intervals + diff, sep = "-"),
At_Risk = at_risk,
Events = events,
Censored = censored,
Adjusted_At_Risk = adjusted_at_risk,
Survival_Probability = survival_prob
)
a=actuarial_results$Events/(actuarial_results$Adjusted_At_Risk*(actuarial_results$Adjusted_At_Risk - actuarial_results$Events))
for(i in seq_along(time_intervals)){
actuarial_results$se=sqrt((actuarial_results$Survival_Probability**2)*sum(a))
}
# Print the results
actuarial_results$low_95=actuarial_results$Survival_Probability-qnorm(0.95,lower.tail = T)*actuarial_results$se
actuarial_results$up_95=actuarial_results$Survival_Probability+qnorm(0.95,lower.tail = T)*actuarial_results$se
actuarial_results %>% filter(Events!=0)
# Plot the Actuarial survival curve
plot(time_intervals, survival_prob, type = "s", xlab = "Time", ylab = "Survival Probability", main = "Actuarial Survival Curve",ylim = c(0,1))
mp$`Central Bank Rate`=as.numeric(mp$`Central Bank Rate`)
#mp=na.exclude(mp)
labels <- mp %>%
group_by(variable = 'Annual Average Inflation') %>%
summarise(Date.x = max(Date.x), value = last(`Annual Average Inflation`)) %>%
bind_rows(
mp %>%
group_by(variable = 'Central Bank Rate') %>%
summarise(Date.x = max(Date.x), value = last(`Central Bank Rate`))
)
mp %>% ggplot(aes(x=Date.x))+geom_line(aes(y=`Annual Average Inflation`),color="red")+
geom_line(aes(y=`Central Bank Rate`),color="blue",size=1)+labs(title = "Plot of Interest Rates and Inflation rates",x="Monthly Rates",y="Rates in percentages",size=1)+ geom_line(aes(y= `12-Month Inflation`),color="green",size=1)+
theme_minimal() +
geom_text(data = labels, aes(x = Date.x, y = value, label = variable, color = variable),
hjust =-0, vjust = -0.5)+scale_x_date(date_breaks = "1 year",date_labels = "%Y")
results
data$`Central Bank Rate`=as.numeric(data$`Central Bank Rate`)
data$`12-Month Inflation`=as.numeric(data$`12-Month Inflation`)
data$`Annual Average Inflation`=as.numeric(data$`Annual Average Inflation`)
exponential_model <- survreg(Surv(Duration, event) ~ exchange_rate + `Interbank Rate` + `Central Bank Rate` + `Annual Average Inflation`, data = data, dist = "exponential")
library(flexsurv)
gompertz_model <- flexsurvreg(Surv(Duration, event) ~ exchange_rate + `Interbank Rate` + `Central Bank Rate` + `Annual Average Inflation`, data = data, dist = "gompertz")
weibul=survreg(Surv(Duration ,event)~exchange_rate+`Interbank Rate`+`Central Bank Rate`+`Annual Average Inflation`,data = data,dist = "weibull")
lognormal=survreg(Surv(Duration ,event)~exchange_rate+`Interbank Rate`+`Central Bank Rate`+`Annual Average Inflation`,data = data,dist = "lognormal")
loglogistic_model <- survreg(Surv(Duration, event) ~ exchange_rate + `Interbank Rate` + `Central Bank Rate` + `Annual Average Inflation`, data = data, dist = "loglogistic")
gamma_model <- flexsurvreg(Surv(Duration, event) ~ exchange_rate + `Interbank Rate` + `Central Bank Rate` + `Annual Average Inflation`, data = data, dist = "gamma")
aicc <- function(aic, k, n) {
return(aic + (2 * k * (k + 1)) / (n - k - 1))
}
results <- data.frame(
Model = c("Weibull", "Lognormal", "Exponential", "Gompertz", "Loglogistic", "Gamma"),
AIC = c(AIC(weibul), AIC(lognormal), AIC(exponential_model), AIC(gompertz_model), AIC(loglogistic_model), AIC(gamma_model)),
BIC = c(BIC(weibul), BIC(lognormal), BIC(exponential_model), BIC(gompertz_model), BIC(loglogistic_model), BIC(gamma_model))
)
results
